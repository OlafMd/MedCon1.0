<?xml version="1.0" encoding="utf-8" ?>
<CodeGen createdOn="2/5/2014 6:13:24 PM">
  <Componenttype>AtomicMethod</Componenttype>

  <Meta>
    <Name>Save_ECM_DOC_GeneralDocument</Name>
    <Namespace></Namespace>
    <Description></Description>
    <Tags></Tags>
  </Meta>

  <PlattformInfo  Target_Method_ProgrammingLanguage="C#"
                  Target_Method_ProgrammingLanguage_Revision="3.5"
                  Target_SQL="MySQL"
                  Target_SQL_Revision="8"
                  Create_Webservice_Interface="true"
                  Create_Webservice_Interface_ServerPlattform="C#"
                  Create_Webservice_Interface_ServerPlattform_Revision="3.5"
                  Create_Webservice_Interface_ApplicationPlattform="FLEX"
                  Create_Webservice_Interface_ApplicationPlattform_Revision="4.5"
                  />

  <CreationInfo Method_Namespace="CL2_Document.Atomic.Manipulation"
                Method_ClassName="cls_Save_ECM_DOC_GeneralDocument"
                Method_Name="Save_ECM_DOC_GeneralDocument"
                ApplicationPlattform_WebServiceName=""
                ApplicationPlattform_Namespace=".Save_ECM_DOC_GeneralDocument"
                />
  <SQLLimitation_CSharp_Extension>
			var returnValue = new FR_Guid();

			var item = new CL1_ECM_DOC.ECM_DOC_GeneralDocument.ORM_ECM_DOC_GeneralDocument();
			if (Parameter.ECM_DOC_GeneralDocumentID != Guid.Empty)
			{
			    var result = item.Load(Connection, Transaction, Parameter.ECM_DOC_GeneralDocumentID);
			    if (result.Status != FR_Status.Success || item.ECM_DOC_GeneralDocumentID == Guid.Empty)
			    {
			        var error = new FR_Guid();
			        error.ErrorMessage = "No Such ID";
			        error.Status =  FR_Status.Error_Internal;
			        return error;
			    }
			}

			if(Parameter.IsDeleted == true){
				item.IsDeleted = true;
				return new FR_Guid(item.Save(Connection, Transaction),item.ECM_DOC_GeneralDocumentID);
			}

			//Creation specific parameters (Tenant, Account ... )
			if (Parameter.ECM_DOC_GeneralDocumentID == Guid.Empty)
			{
				item.Tenant_RefID = securityTicket.TenantID;
			}

			item.DocumentMatchingID = Parameter.DocumentMatchingID;
			item.DocumentTypeMatchingID = Parameter.DocumentTypeMatchingID;
			item.Document_RefID = Parameter.Document_RefID;
			item.IsPublicallyVisible = Parameter.IsPublicallyVisible;


			return new FR_Guid(item.Save(Connection, Transaction),item.ECM_DOC_GeneralDocumentID);
  </SQLLimitation_CSharp_Extension>

  <Parameters IsClass="true" Name="P_L2DO_SEDGD_1813">
    <Members>
		<ClassMember IsIdentificator="True" Name="ECM_DOC_GeneralDocumentID" Type="Guid"  />
		<ClassMember Name="DocumentMatchingID" Type="String"  />
		<ClassMember Name="DocumentTypeMatchingID" Type="String"  />
		<ClassMember Name="Document_RefID" Type="Guid"  />
		<ClassMember Name="IsPublicallyVisible" Type="Boolean"  />
		<ClassMember Name="IsDeleted" Type="Boolean"  />
	
    </Members>
  </Parameters>


	<ResultInfo Returns_just_the_status_of_the_operation="false"
				Returns_a_StandardDataType_or_StadardDataTypeArray="true"
				Returns_an_Object_or_ObjectArray="false">

				<StandardReturnType_Definition returnType="Guid" IsArray="false" />
	</ResultInfo>

</CodeGen>


