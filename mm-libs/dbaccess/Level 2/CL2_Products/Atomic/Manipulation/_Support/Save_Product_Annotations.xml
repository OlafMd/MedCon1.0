<?xml version="1.0" encoding="utf-8" ?>
<CodeGen createdOn="11/15/2013 1:38:34 PM">
  <Componenttype>AtomicMethod</Componenttype>

  <Meta>
    <Name>Save_CMN_PRO_Product_Annotations</Name>
    <Namespace>CL2_Products.Atomic.Manipulation</Namespace>
    <Description></Description>
    <Tags></Tags>
  </Meta>

  <PlattformInfo  Target_Method_ProgrammingLanguage="C#"
                  Target_Method_ProgrammingLanguage_Revision="3.5"
                  Target_SQL="MySQL"
                  Target_SQL_Revision="8"
                  Create_Webservice_Interface="true"
                  Create_Webservice_Interface_ServerPlattform="C#"
                  Create_Webservice_Interface_ServerPlattform_Revision="3.5"
                  Create_Webservice_Interface_ApplicationPlattform="FLEX"
                  Create_Webservice_Interface_ApplicationPlattform_Revision="4.5"
                  />

  <CreationInfo Method_Namespace="CL2_Products.Atomic.Manipulation"
                Method_ClassName="cls_Save_Product_Annotations"
                Method_Name="Save_Product_Annotations"
                ApplicationPlattform_WebServiceName=""
                ApplicationPlattform_Namespace=".Save_CMN_PRO_Product_Annotations"
                />
  <SQLLimitation_CSharp_Extension>
		  var returnValue = new FR_Guid();

		  var item = new CL1_CMN_PRO.ORM_CMN_PRO_Product_Annotations();
		  if (Parameter.CMN_PRO_Product_AnnotationID != Guid.Empty)
		  {
		  var result = item.Load(Connection, Transaction, Parameter.CMN_PRO_Product_AnnotationID);
		  if (result.Status != FR_Status.Success || item.CMN_PRO_Product_AnnotationID == Guid.Empty)
		  {
		  var error = new FR_Guid();
		  error.ErrorMessage = "No Such ID";
		  error.Status =  FR_Status.Error_Internal;
		  return error;
		  }
		  }

		  if(Parameter.IsDeleted == true){
		  item.IsDeleted = true;
		  return new FR_Guid(item.Save(Connection, Transaction),item.CMN_PRO_Product_AnnotationID);
		  }

		  //Creation specific parameters (Tenant, Account ... )
		  if (Parameter.CMN_PRO_Product_AnnotationID == Guid.Empty)
		  {
		  item.Tenant_RefID = securityTicket.TenantID;
		  }

		  item.GlobalPropertyMatchingID = Parameter.GlobalPropertyMatchingID;
		  item.ProductAnnotation_Abbreviation = Parameter.ProductAnnotation_Abbreviation;
		  item.ProductAnnotation_Name_DictID = Parameter.ProductAnnotation_Name_DictID;
		  item.IsValueBoolean = Parameter.IsValueBoolean;
		  item.IsValueNumber = Parameter.IsValueNumber;


		  return new FR_Guid(item.Save(Connection, Transaction),item.CMN_PRO_Product_AnnotationID);
  </SQLLimitation_CSharp_Extension>
	
	<Parameters IsClass="true" Name="P_L2PD_SPA_1337">
    <Members>
		<ClassMember IsIdentificator="True" Name="CMN_PRO_Product_AnnotationID" Type="Guid"  />
		<ClassMember Name="GlobalPropertyMatchingID" Type="String"  />
		<ClassMember Name="ProductAnnotation_Abbreviation" Type="String"  />
		<ClassMember Name="ProductAnnotation_Name_DictID" Type="Dict"  />
		<ClassMember Name="IsDeleted" Type="Boolean"  />
		<ClassMember Name="IsValueBoolean" Type="Boolean"  />
		<ClassMember Name="IsValueNumber" Type="Boolean"  />	
    </Members>
  </Parameters>


	<ResultInfo Returns_just_the_status_of_the_operation="false"
				Returns_a_StandardDataType_or_StadardDataTypeArray="true"
				Returns_an_Object_or_ObjectArray="false">

				<StandardReturnType_Definition returnType="Guid" IsArray="false" />
	</ResultInfo>

</CodeGen>


